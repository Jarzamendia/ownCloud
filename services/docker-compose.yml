version: "3"

services:

    owncloud:
        image: jarzamendia/owncloud:10.0.10
        networks:
            - proxy_net
        volumes:
            - /etc/localtime:/etc/localtime
            - /swarm/owncloud/data/apps:/var/www/html/apps
            - /swarm/owncloud/data/config:/var/www/html/config
            - /swarm/owncloud/data/data:/var/www/html/data
        deploy:
            replicas: 1
            resources:
                limits:
                    memory: 128M
            labels:
                - "traefik.enable=true"
                - "traefik.docker.network=proxy_net"
                - "traefik.http.routers.owncloud_route.rule=Host(`owncloud.arzamendia.com.br`)"
                - "traefik.http.routers.owncloud_route.entrypoints=http"
                - "traefik.http.routers.owncloud_route.service=owncloud_service"
                - "traefik.http.services.owncloud_service.loadbalancer.server.port=80"

    db:
        image: mysql
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: example
        networks:
            - db_net
        deploy:
            replicas: 1
        volumes:
            - /swarm/owncloud/data/database:/var/lib/mysql

    adminer:
        image: adminer:4.7.1-standalone
        networks:
          - proxy_net
          - db_net
        deploy:
            replicas: 1
            labels:
                - "traefik.enable=true"
                - "traefik.docker.network=apm_net"
                - "traefik.http.routers.adminer_route.rule=Host(`adminer.arzamendia.com.br`)"
                - "traefik.http.routers.adminer_route.entrypoints=http"
                - "traefik.http.routers.adminer_route.service=adminer_service"
                - "traefik.http.services.adminer_service.loadbalancer.server.port=8080"

    traefik:
        image: traefik:v2.1
        networks:
            - proxy_net
        command: --api.insecure=true --providers.docker --providers.docker.swarmMode=true --providers.docker.network=apm_net --log
        ports:
            - 80:80
            - 8080:8080
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        deploy:
            mode: replicated
            restart_policy:
                condition: any
            placement:
                constraints:
                    - "node.role==manager"

networks:
    proxy_net:
        external: true
    db_net:
        external: true